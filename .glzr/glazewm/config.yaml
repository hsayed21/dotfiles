general:
  # Commands to run when the WM has started.
  startup_commands: [ "shell-exec zebar" ]

  # Commands to run just before the WM is shutdown.
  shutdown_commands: ["shell-exec taskkill /IM zebar.exe /F"]

  # Commands to run after the WM config is reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: true

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - "monitor_focus": Jump when focus changes between monitors.
    # - "window_focus": Jump when focus changes between windows.
    trigger: "window_focus"

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: "5px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "40px"
    right: "10px"
    bottom: "10px"
    left: "10px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#b5bd68"

    # Remove the title bar from the window"s frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window"s frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: true
      # Allowed values: "square", "rounded", "small_rounded".
      style: "square"

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: false
      color: "#a1a1a1"
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: true
      style: "square"

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: "tiling", "floating".
  initial_state: "floating"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: true

      # Whether to show floating windows as always on top.
      shown_on_top: false

    fullscreen:
      # Maximize the window if possible. If the window doesn"t have a
      # maximize button, then it"ll be fullscreen"ed normally instead.
      maximized: true

      # Whether to show fullscreen windows as always on top.
      shown_on_top: false

workspaces:
  - name: "1"
    display_name: "1: HOME"
    bind_to_monitor: 0
    keep_alive: true
  - name: "2"
    display_name: "2: DEV"
    bind_to_monitor: 1
    keep_alive: true
  - name: "3"
    display_name: "3: BROWSERS"
    bind_to_monitor: 1
  - name: "4"
    display_name: "4: OTHERS"
    # bind_to_monitor: 0
  - name: "5"
    display_name: "5: TEST"
  - name: "6"
    display_name: "6:      "
  - name: "7"
    display_name: "7:      "
  - name: "8"
    display_name: "8:      "
  - name: "9"
    display_name: "9:     "
  - name: "10"
    display_name: "10:     "

# My Configuration: 2 physical displays/monitors
window_rules:

  # Default rule to ensure windows open on focused workspace/monitor
  # - commands: ["focus --newest"]
  #   match:
  #     - window_class: { regex: ".*" }

  # - commands: ['shell-exec --hide-window node "G:\My Drive\dotfiles\.glzr\scripts\moveToFocusedMonitor.js"']
  #   match:
  #     - window_process: { regex: ".*" }

  - commands: ["move --workspace 1", "focus --workspace 1", "set-fullscreen"]
    match:
      # Move ms-teams to workspace 1.
      - window_process: { regex: "ms-teams|slack|discord|Mailbird|telegram|whatsapp" }
      # Move microsoft office applications
      - window_process: { regex: "WINWORD|EXCEL|MSPUB|MSACCESS|soffice|wordpad" }
      - window_process: { regex: "dopus|explorer" }
      # move youtube to workspace 1
      # - window_process: { equals: "chrome" }
      #   window_title: { regex: ".*YouTube.*" }

  - commands: ["move --workspace 2", "focus --workspace 2", "set-fullscreen", "wm-redraw"]
    match:
      # Move autocad to workspace 2.
      - window_process: { regex: "Code - Insiders|Code|dbforge.*?|devenv" }

  - commands: ["move --workspace 3", "focus --workspace 3", "set-fullscreen"]
    match:
      # Move directory-opus to workspace 4.
      - window_process: { regex: "chrome|firefox|brave|msedge|opera|vivaldi" }

  # - commands: ["move --workspace 5", "focus --workspace 5"]
  #   match:
  #     - window_process: { regex: ".*" }

  - commands: ["ignore"]
    match:
      # Operating System apps
      - window_process: { regex: "zebar|Flow.Launche|AltSnap" }
      - window_process: { regex: "Taskmgr|ScreenClippingHost" }
      # Ignores picture-in-picture windows for browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys" }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: "PowerToys" }
        window_title: { regex: ".*? - Peek" }
        window_class: { regex: "HwndWrapper" }
      - window_title: { equals: "TODO Tasks" }
      - window_process: { regex: "AutoHotkey.*?" }
      - window_process: { regex: "POPsRestaurant|pops_enterprise|Retail.Main.BackOffice|Retail.Main.POS" }
      - window_title: { regex: "Swagger UI.*?" }
      - window_title: { regex: ".*?dialog.*?|.*?alert.*?" }  # Regex match
      - window_process: { regex: "voicemeeterpro|voicemeeter8x64" }
      - window_class: { equals: "#32770" }
      - window_title: { equals: "ShareX - Image editor" }

      # - window_type: { equals: "dialog" }
      #   window_class: { equals: "PotPlayer64" }


  - commands: ["set-floating"]
    match:
      - window_process: { regex: "sublime_text|TreeSize|PotPlayerMini64|QuranWindows|quran-companion" }

  - commands: ["set-floating --centered"]
    match:
      - window_process: { regex: "Taskmgr|ProcessHacker|winspy|Calculator|notepad|mspaint|WindowsTerminal|ApplicationFrameHost" }
      - window_title: { regex: "Volume Mixer|Settings|Task Manager" }
      - window_process: { equals: "DeepL" }

  - commands: ["set-fullscreen"]
    match:
      - window_title: { regex: "ShareX - Image editor - .*?" }

binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["h", "right"]
      - commands: ["resize --width +2%"]
        bindings: ["l", "left"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+z which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+z"]

keybindings:
  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+ctrl+h", "alt+ctrl+left"]
  - commands: ["focus --direction right"]
    bindings: ["alt+ctrl+l", "alt+ctrl+right"]
  - commands: ["focus --direction up"]
    bindings: ["alt+ctrl+k", "alt+ctrl+up"]
  - commands: ["focus --direction down"]
    bindings: ["alt+ctrl+j", "alt+ctrl+down"]

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+shift+h", "alt+shift+left"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+l", "alt+shift+right"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+k", "alt+shift+up"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+j", "alt+shift+down"]

  # Resize focused window by a percentage or pixel amount.
  - commands: ["resize --width -2%"]
    bindings: ["alt+ctrl+y", "alt+ctrl+right"]
  - commands: ["resize --width +2%"]
    bindings: ["alt+ctrl+o", "alt+ctrl+left"]
  - commands: ["resize --height +2%"]
    bindings: ["alt+ctrl+i", "alt+ctrl+up"]
  - commands: ["resize --height -2%"]
    bindings: ["alt+ctrl+u", "alt+ctrl+down"]

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name "resize".
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+shift+r"]

  # Disables all keybindings until alt+shift+z is pressed again.
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["alt+shift+z"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+shift+v"]

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["alt+ctrl+f"]

  # Change the focused window to be tiling.
  - commands: ["toggle-tiling"]
    bindings: ["alt+ctrl+t"]

  # Change the focused window to be fullscreen.
  - commands: ["toggle-fullscreen"]
    bindings: ["alt+shift+f"]

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+ctrl+m"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["alt+shift+c"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["alt+ctrl+shift+k"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+q"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+ctrl+shift+w"]

  # Launch Alacritty terminal
  - commands: ["shell-exec alacritty"]
    bindings: ["alt+shift+enter"]

  # Focus the next/previous workspace defined in `workspaces` config.
  # - commands: ["focus --next-workspace"]
  #   bindings: ["alt+ctrl+d"]
  # - commands: ["focus --prev-workspace"]
  #   bindings: ["alt+ctrl+a"]
  # - commands: ["focus --recent-workspace"]
  #   bindings: ["alt+ctrl+z"]

  - commands: ["focus --next-workspace"]
    bindings: ["alt+s"]

  - commands: ["focus --prev-workspace"]
    bindings: ["alt+a"]

  - commands: ["focus --recent-workspace"]
    bindings: ["alt+d"]


  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]
  - commands: ["focus --workspace 10"]
    bindings: ["alt+0"]

  # Move the focused window"s parent workspace to a monitor in a given
  # direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["alt+ctrl+shift+left"]
  - commands: ["move-workspace --direction right"]
    bindings: ["alt+ctrl+shift+right"]
  - commands: ["move-workspace --direction up"]
    bindings: ["alt+ctrl+shift+up"]
  - commands: ["move-workspace --direction down"]
    bindings: ["alt+ctrl+shift+down"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1", "focus --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2", "focus --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3", "focus --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4", "focus --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5", "focus --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6", "focus --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7", "focus --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8", "focus --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9", "focus --workspace 9"]
    bindings: ["alt+shift+9"]
  - commands: ["move --workspace 10", "focus --workspace 10"]
    bindings: ["alt+shift+0"]

  - commands: ["shell-exec wezterm-gui"]
    # Launch CMD terminal. Alternatively, use `shell-exec wt` or

    # Terminal and Git Bash respectively.
    # `shell-exec %ProgramFiles%/Git/git-bash.exe` to start Windows
    bindings: ["alt+enter"]


  # Launch Alacritty and open the user’s scripts menu
  # - commands: ["shell-exec alacritty --working-directory %USERPROFILE%\\scripts -e cmd /k menu.bat"]
  #   bindings: ["alt+shift+m"]
